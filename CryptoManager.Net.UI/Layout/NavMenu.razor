@inject AuthStateProvider AuthProvider
@using CryptoManager.Net.UI.Authorization
@implements IDisposable

<MudNavMenu>
    <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
    <MudNavLink Href="/Quick" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AccountBalanceWallet">QuickView</MudNavLink>
    <MudNavGroup Title="Trading" Icon="@Icons.Material.Filled.CurrencyExchange" Expanded="true">
        <MudNavLink Href="/Assets" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.CurrencyBitcoin">Assets</MudNavLink>
        <MudNavLink Href="/Symbols" Match="NavLinkMatch.Prefix" Icon="@CustomSvgs.SymbolIcon">Symbols</MudNavLink>
        <MudNavLink Href="/Exchanges" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Web">Exchanges</MudNavLink>
    </MudNavGroup>
</MudNavMenu>

@code{
    protected override async Task OnInitializedAsync()
    {
        AuthProvider.AuthenticationStateChanged += OnAuthStateChange;
        await AuthProvider.GetAuthenticationStateAsync();
    }

    private async void OnAuthStateChange(Task<AuthenticationState> authState)
    {
        await authState;
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        AuthProvider.AuthenticationStateChanged -= OnAuthStateChange;
    }
}